{% comment %} Editorial Columns Assets {% endcomment %}
<link rel="preload" href="{{ 'section-editorial-columns.css' | asset_url }}" as="style" onload="this.onload=null;this.rel='stylesheet'">
<noscript><link rel="stylesheet" href="{{ 'section-editorial-columns.css' | asset_url }}"></noscript>

{% comment %} Editorial Columns Logic {% endcomment %}
{%- liquid

  assign section_padding = ''
  if section.settings.section_padding == 'top'
    assign section_padding = 'pb0'
  elsif section.settings.section_padding == 'bottom'
    assign section_padding = 'mt0'
  elsif section.settings.section_padding == 'none'
    assign section_padding = 'mt0 pb0'
  endif

  if settings.section_title_align == 'left'
    assign heading_align = 'a-left'
  else
    assign heading_align = 'a-center'
  endif

  case section.settings.text_align
  when 'left'
    assign text_align =  'a-left'
  when 'center'
    assign text_align =  'a-center'
  when 'right'
    assign text_align =  'a-right'
  endcase

  case section.blocks.size
    when 0
    when 1
      assign block_width = 'span-12 auto'
    when 2
      assign block_width = 'span-6 auto'
    when 3
      assign block_width = 'span-4 auto'
    when 4
      assign block_width = 'span-3 auto'
    when 5
      assign block_width = 'auto'
    when 6
      assign block_width = 'span-2 auto'
  endcase

  assign sm_render = '100vw'
  assign md_render = 'calc(100vw / ' | append: section.blocks.size | append: ')'
  assign lg_render = 'calc(1600px / ' | append: section.blocks.size | append: ')'

  if section.index == 1
    assign loading = 'eager'
    assign fetch_priority = 'high'
  endif

-%}

{% comment %} Editorial Columns Template {% endcomment %}
<div
  class="section-txt-cols pl-3 md:pl-0 mb-5 text-columns-{{ section.id }} global__section {{ section_padding }} {% if request.visual_preview_mode %}preview-mode{% endif %}"
  data-section-id="{{ section.id }}"
  data-section-type="editorial-columns"
  data-section-loaded="false">
  <div class="grid__wrapper">
    <h2 class="section-txt-cols__section-heading {{ heading_align }} mb-3 grid-span-12 no-wrap">{{ section.settings.title }}</h2>
  </div>
  <div class="section-txt-cols__inner-wrapper grid__wrapper">
    {% for block in section.blocks %}
      <article class="section-txt-cols__item text-promo-{{ block.id }} {{ block_width }} {{ text_align }}" {{ block.shopify_attributes }}>
        {% if block.settings.link != blank %}<a href="{{ block.settings.link }}">{% endif %}
          <div class="section-txt-cols__image mb4">
            {% if block.settings.image != blank %}
              {% render 'helper-image',
                 type: block.settings.image,
                 sm_render: sm_render
                 md_render: md_render,
                 lg_render: lg_render,
                 loading: loading,
                 fetchpriority: fetch_priority %}
            {% else %}
              <div class="demo-1  onboard">
                {{ 'image' | placeholder_svg_tag: 'placeholder-svg' }}
              </div>
            {% endif %}
          </div>
        {% if block.settings.link != blank %}</a>{% endif %}

          <div class="section-txt-cols__content mb2 animate--text delay--{{ forloop.index0 }}">
            {% if block.settings.title != blank %}
              <h3 class="section-txt-cols__block-heading mb2">{{ block.settings.title }}</h3>
            {% endif %}
            {% if block.settings.subheading != blank %}
              <div class="section-txt-cols__block-subheading mb2">
                {{ block.settings.subheading }}
              </div>
            {% endif %}
          </div>
      </article>
    {% endfor %}
    <style type="text/css">
      {% if section.blocks.size == 5 %}
        .text-columns-{{ section.id }} .grid__wrapper {
          grid-template-columns: repeat(5, 1fr) !important;
        }
      {% endif %}

      @media (max-width: 767px) {
        .section-txt-cols__section-heading.no-wrap {
          font-size: 24px !important;
          white-space: nowrap;
        }
        
        .section-txt-cols__inner-wrapper {
          display: flex !important;
          flex-wrap: nowrap !important;
          overflow-x: auto !important;
          -webkit-overflow-scrolling: touch;
          padding-bottom: 20px; /* Add space for scrollbar */
          scroll-padding: 0 20px;
          scroll-snap-type: x mandatory;
        }
        
        .section-txt-cols__item {
          flex: 0 0 auto;
          width: 270px !important;
          margin-right: 15px !important;
          scroll-snap-align: start;
          position: relative;
        }
        
        .section-txt-cols__block-subheading {
          position: relative;
        }
        
        .section-txt-cols__item.collapsed .section-txt-cols__block-subheading {
          max-height: 120px; /* Limit height of content */
          overflow: hidden;
          margin-bottom: 30px;
        }
        
        .section-txt-cols__item.collapsed .section-txt-cols__block-subheading::after {
          content: "";
          position: absolute;
          bottom: 0;
          left: 0;
          width: 100%;
          height: 40px;
          background: linear-gradient(to bottom, rgba(255, 255, 255, 0), rgba(255, 255, 255, 1) 90%);
          pointer-events: none;
        }
        
        .read-more-btn {
          display: inline-block;
          padding: 5px 10px;
          margin-top: 5px;
          font-size: 12px;
          color: #333;
          background: transparent;
          border: 1px solid #333;
          border-radius: 4px;
          cursor: pointer;
          position: absolute;
          bottom: 10px;
          left: 50%;
          transform: translateX(-50%);
          z-index: 2;
        }
      }
      
      .section-txt-cols__section-heading.no-wrap {
        font-size: 26px;
        white-space: nowrap;
        font-weight: 700 !important;
      }
    </style>

    {% if section.blocks.size == 0 %}
      {% render 'onboard-no-blocks' %}
    {% endif %}
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Add rollup functionality for mobile text
    function setupTextRollup() {
      if (window.innerWidth <= 767) {
        const items = document.querySelectorAll('.text-columns-{{ section.id }} .section-txt-cols__item');
        
        items.forEach(item => {
          const content = item.querySelector('.section-txt-cols__block-subheading');
          
          // Only process if content exists and doesn't already have a button
          if (content && !item.querySelector('.read-more-btn')) {
            // Check if content is taller than our limit
            if (content.scrollHeight > 120) {
              item.classList.add('collapsed');
              
              // Create read more button
              const button = document.createElement('button');
              button.classList.add('read-more-btn');
              button.textContent = 'Więcej';
              item.appendChild(button);
              
              // Add click event
              button.addEventListener('click', function(e) {
                e.preventDefault();
                e.stopPropagation();
                
                if (item.classList.contains('collapsed')) {
                  item.classList.remove('collapsed');
                  button.textContent = 'Mniej';
                } else {
                  item.classList.add('collapsed');
                  button.textContent = 'Więcej';
                }
              });
            }
          }
        });
      } else {
        // Remove collapsed state and buttons on desktop
        const items = document.querySelectorAll('.text-columns-{{ section.id }} .section-txt-cols__item');
        items.forEach(item => {
          item.classList.remove('collapsed');
          const btn = item.querySelector('.read-more-btn');
          if (btn) {
            btn.remove();
          }
        });
      }
    }
    
    // Run on load with a slight delay to ensure DOM is fully processed
    setTimeout(setupTextRollup, 100);
    
    // Run on window resize
    let resizeTimer;
    window.addEventListener('resize', function() {
      clearTimeout(resizeTimer);
      resizeTimer = setTimeout(setupTextRollup, 250);
    });
  });
</script>

{% schema %}
{
  "name": "Editorial columns",
  "tag": "section",
  "class": "dynamic-section",
  "max_blocks": 6,
  "settings": [
    {
      "type": "text",
      "id": "title",
      "label": "Heading",
      "default": "Editorial columns"
    },
    {
      "type": "text_alignment",
      "id": "text_align",
      "label": "Text alignment",
      "default": "left"
    },
    {
      "type": "select",
      "id": "section_padding",
      "label": "Section spacing",
      "options": [
        {
          "value": "top",
          "label": "Top"
        },
        {
          "value": "bottom",
          "label": "Bottom"
        },
        {
          "value": "both",
          "label": "Both"
        },
        {
          "value": "none",
          "label": "None"
        }
      ],
      "default": "both"
    }
  ],
  "blocks": [
    {
      "type": "text_block",
      "name": "Column",
      "settings": [
        {
          "type": "image_picker",
          "id": "image",
          "label": "Image"
        },
        {
          "type": "url",
          "id": "link",
          "label": "Link",
          "info": "Optional"
        },
        {
          "type": "text",
          "id": "title",
          "label": "Heading",
          "default": "Our collections"
        },
        {
          "type": "richtext",
          "id": "subheading",
          "label": "Text",
          "default": "<p>Pair large text with an image to give focus to your chosen product, collection, or blog post. Add details on availability, style, or even provide a review.</p>"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Editorial columns",
      "blocks": [
        {
          "type": "text_block"
        },
        {
          "type": "text_block"
        },
        {
          "type": "text_block"
        }
      ]
    }
  ],
  "disabled_on": {
    "groups": ["header", "footer"]
  }
}
{% endschema %}
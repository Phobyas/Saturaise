{% comment %} Rich Text Assets {% endcomment %}
<link rel="preload" href="{{ 'section-rich-text.css' | asset_url }}" as="style" onload="this.onload=null;this.rel='stylesheet'">
<noscript><link rel="stylesheet" href="{{ 'section-rich-text.css' | asset_url }}"></noscript>

{% comment %} Rich Text logic {% endcomment %}
{%- liquid
  assign section_padding = ''
  if section.settings.section_padding == 'top'
    assign section_padding = 'pb0'
  elsif section.settings.section_padding == 'bottom'
    assign section_padding = 'mt0'
  elsif section.settings.section_padding == 'none'
    assign section_padding = 'mt0 pb0'
  endif

  assign reduce_padding = false
  if section.settings.reduce_padding
    assign reduce_padding = true
  endif
-%}

{%- style -%}
  /* Main container styling consistent with other sections */
  .section-richtext {
    max-width: 1280px;
    margin: 0 auto;
    width: 100%;
  }

  @media (min-width: 1920px) {
    .section-richtext {
      max-width: 1600px;
    }
  }

  /* Section heading styling - matching collection sections */
  .rich-text-{{ section.id }} .section-heading {
    font-size: {{ section.settings.heading_size }}px;
    font-weight: 700;
    margin-bottom: 20px;
    text-align: {% if section.settings.alignment == 'a-center' %}center{% else %}left{% endif %};
    color: {% if section.settings.color_scheme == 'none' %}#1f2937{% else %}var(--scheme-{{ section.settings.color_scheme }}-text){% endif %};
    letter-spacing: -0.025em;
    line-height: 1.2;
  }

  @media (max-width: 767px) {
    .rich-text-{{ section.id }} .section-heading {
      font-size: calc({{ section.settings.heading_size }}px - 4px);
      margin-bottom: 16px;
    }
  }

  /* Content typography - modern and clean */
  .rich-text-{{ section.id }} .pages-content {
    position: relative;
    transition: all 0.3s ease;
  }

  .rich-text-{{ section.id }} .rte {
    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  }

  .rich-text-{{ section.id }} .rte p,
  .rich-text-{{ section.id }} .rte li {
    font-size: {{ section.settings.text_size }}px;
    font-weight: 400;
    line-height: 1.7;
    color: {% if section.settings.color_scheme == 'none' %}#374151{% else %}var(--scheme-{{ section.settings.color_scheme }}-text){% endif %};
    margin-bottom: 1.2rem;
  }

  @media (max-width: 767px) {
    .rich-text-{{ section.id }} .rte p,
    .rich-text-{{ section.id }} .rte li {
      font-size: calc({{ section.settings.text_size }}px - 2px);
      line-height: 1.6;
    }
  }

  /* Heading styles within content */
  .rich-text-{{ section.id }} .rte h1 {
    font-size: 32px;
    font-weight: 700;
    margin: 2rem 0 1rem 0;
    letter-spacing: -0.025em;
  }

  .rich-text-{{ section.id }} .rte h2 {
    font-size: 28px;
    font-weight: 700;
    margin: 1.8rem 0 1rem 0;
    letter-spacing: -0.02em;
  }

  .rich-text-{{ section.id }} .rte h3 {
    font-size: 22px;
    font-weight: 600;
    margin: 1.5rem 0 0.8rem 0;
    letter-spacing: -0.015em;
  }

  /* Link styling - simple and clear */
  .rich-text-{{ section.id }} .rte a,
  .rich-text-{{ section.id }} .pages-content a {
    color: #2563eb !important;
    text-decoration: underline !important;
    transition: all 0.2s ease;
    font-size: 14px !important;
  }

  .rich-text-{{ section.id }} .rte a:hover,
  .rich-text-{{ section.id }} .pages-content a:hover {
    color: #1d4ed8 !important;
    opacity: 0.9;
  }

  /* List styling */
  .rich-text-{{ section.id }} .rte ul,
  .rich-text-{{ section.id }} .rte ol {
    margin: 1.5rem 0;
    padding-left: 1.8rem;
  }

  .rich-text-{{ section.id }} .rte ul {
    list-style: disc;
  }

  .rich-text-{{ section.id }} .rte ol {
    list-style: decimal;
  }

  .rich-text-{{ section.id }} .rte li {
    margin-bottom: 0.5rem;
  }

  /* Content width control */
  @media (min-width: 768px) {
    .rich-text-{{ section.id }} .section-heading,
    .rich-text-{{ section.id }} .pages-content {
      max-width: {{ section.settings.content_width }}%;
      margin-left: {% if section.settings.alignment == 'a-center' %}auto{% else %}0{% endif %};
      margin-right: {% if section.settings.alignment == 'a-center' %}auto{% else %}0{% endif %};
    }
  }

  /* Expand/Collapse Container - modern style */
  .description-container {
    position: relative;
    overflow: hidden;
    transition: max-height 0.5s cubic-bezier(0.25, 0.46, 0.45, 0.94);
  }
   
  .description-container.collapsed {
    max-height: {{ section.settings.collapsed_height }}px;
  }
  
  .description-container.expanded {
    max-height: none;
  }
  
  /* Modern fade overlay */
  .fade-overlay {
    position: absolute;
    bottom: 0;
    left: 0;
    width: 100%;
    height: 120px;
    background: linear-gradient(
      to bottom,
      transparent 0%,
      {% if section.settings.color_scheme == 'none' %}
        rgba(255,255,255,0) 20%,
        rgba(255,255,255,0.9) 70%,
        rgba(255,255,255,1) 100%
      {% else %}
        transparent 20%,
        color-mix(in srgb, var(--scheme-{{ section.settings.color_scheme }}-bg) 90%, transparent) 70%,
        var(--scheme-{{ section.settings.color_scheme }}-bg) 100%
      {% endif %}
    );
    pointer-events: none;
    transition: opacity 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94);
  }
  
  .description-container.expanded .fade-overlay {
    opacity: 0;
    visibility: hidden;
  }
  
  /* Modern button style matching collection sections */
  .rich-text-description-button {
    display: inline-flex !important;
    align-items: center !important;
    justify-content: center !important;
    gap: 8px !important;
    cursor: pointer !important;
    transition: all 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94) !important;
    min-height: 40px !important;
    padding: 10px 20px !important;
    border-radius: 50px !important;
    background-color: {% if section.settings.color_scheme == 'none' %}#323232{% else %}var(--scheme-{{ section.settings.color_scheme }}-text){% endif %} !important;
    color: {% if section.settings.color_scheme == 'none' %}#ffffff{% else %}var(--scheme-{{ section.settings.color_scheme }}-bg){% endif %} !important;
    border: none !important;
    box-shadow: 0 2px 5px rgba(0,0,0,0.1) !important;
    font-size: 14px !important;
    font-weight: 600 !important;
    letter-spacing: 0.5px !important;
    text-transform: uppercase !important;
    position: relative !important;
    z-index: 2 !important;
  }

  .rich-text-description-button .button-icon {
    width: 16px;
    height: 16px;
    transition: transform 0.3s ease;
  }

  .description-container.expanded ~ * .rich-text-description-button .button-icon {
    transform: rotate(180deg);
  }
  
  .rich-text-description-button:hover {
    background-color: {% if section.settings.color_scheme == 'none' %}#1d4ed8{% else %}var(--scheme-{{ section.settings.color_scheme }}-hover){% endif %} !important;
    transform: scale(1.05) !important;
    box-shadow: 0 4px 12px rgba(37, 99, 235, 0.3) !important;
  }

  .rich-text-description-button:active {
    transform: scale(1.02) !important;
    transition: all 0.1s ease !important;
  }

  .rich-text-description-button:disabled {
    background-color: #9ca3af !important;
    cursor: not-allowed !important;
    transform: none !important;
    box-shadow: 0 1px 3px rgba(0,0,0,0.1) !important;
  }

  .rich-text-description-button:disabled:hover {
    background-color: #9ca3af !important;
    transform: none !important;
    box-shadow: 0 1px 3px rgba(0,0,0,0.1) !important;
  }

  /* Focus styles for accessibility */
  .rich-text-description-button:focus {
    outline: 2px solid #2563eb;
    outline-offset: 2px;
  }

  /* Color scheme background */
  {% unless section.settings.color_scheme == 'none' %}
    .rich-text-{{ section.id }} .grid__wrapper {
      background-color: var(--scheme-{{ section.settings.color_scheme }}-bg) !important;
      border-radius: 12px;
    }
  {% endunless %}

  /* Animation states */
  .rich-text-{{ section.id }} .animate--text {
    opacity: 0;
    transform: translateY(20px);
    animation: fadeInUp 0.6s cubic-bezier(0.25, 0.46, 0.45, 0.94) forwards;
  }

  .rich-text-{{ section.id }} .delay--1 {
    animation-delay: 0.1s;
  }

  .rich-text-{{ section.id }} .delay--2 {
    animation-delay: 0.2s;
  }

  @keyframes fadeInUp {
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  /* Mobile improvements */
  @media (max-width: 767px) {
    .rich-text-{{ section.id }} .grid__wrapper {
      padding-left: 1rem;
      padding-right: 1rem;
    }

    .rich-text-description-button {
      width: 100% !important;
      justify-content: center !important;
    }
  }

  /* Utility classes */
  .mt0 { margin-top: 0 !important; }
  .pb0 { padding-bottom: 0 !important; }
  
  .py-9 { 
    padding-top: 3rem;
    padding-bottom: 3rem;
  }

  @media (min-width: 768px) {
    .py-9 {
      padding-top: 4rem;
      padding-bottom: 4rem;
    }
  }
{%- endstyle -%}

{% comment %} Rich Text Template {% endcomment %}
<div
  class="global__section section-richtext rich-text-{{ section.id }} {{ section_padding }} {% if request.visual_preview_mode %}preview-mode{% endif %}"
  data-section-id="{{ section.id }}"
  data-section-type="rich-text"
  data-section-loaded="false">

  <div class="grid__wrapper {% unless reduce_padding %}py-9{% endunless %}">
    {% if section.settings.title != blank %}
      <div class="span-12 auto px-3 lg:px-0 animate--text delay--1">
        <h2 class="section-heading">{{ section.settings.title }}</h2>
      </div>
    {% endif %}

    {%- unless section.settings.page == blank and section.settings.rich_text == blank -%}
      <div class="span-12 auto {{ section.settings.alignment }} px-3 lg:px-0">
        <div class="pages-content animate--text delay--2">
          <div class="rte">
            {% if section.settings.enable_expand and section.settings.rich_text != blank or section.settings.page != blank %}
              <div class="description-container collapsed">
                <div class="description-content">
                  {% if section.settings.page != blank %}
                    {% assign feat_page = pages[section.settings.page] %}
                    {{ feat_page.content }}
                  {% elsif section.settings.rich_text != blank %}
                    {{ section.settings.rich_text }}
                  {% endif %}
                </div>
                
                <div class="fade-overlay"></div>
              </div>
              
              <div class="{% if section.settings.alignment == 'a-center' %}text-center{% else %}text-left{% endif %} mt-4">
                <button class="toggle-description rich-text-description-button">
                  <span class="button-text">{{ section.settings.expand_text }}</span>
                  <svg class="button-icon" xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" viewBox="0 0 16 16">
                    <path d="M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z"/>
                  </svg>
                </button>
              </div>
            {% else %}
              {% if section.settings.page != blank %}
                {% assign feat_page = pages[section.settings.page] %}
                {{ feat_page.content }}
              {% elsif section.settings.rich_text != blank %}
                {{ section.settings.rich_text }}
              {% endif %}
            {% endif %}
          </div>
        </div>
      </div>
    {%- endunless -%}
  </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
  const sectionId = '{{ section.id }}';
  const toggleButton = document.querySelector('.rich-text-' + sectionId + ' .toggle-description');
  const descriptionContainer = document.querySelector('.rich-text-' + sectionId + ' .description-container');
  
  if (toggleButton && descriptionContainer) {
    // Check if content needs expand button
    const contentHeight = descriptionContainer.querySelector('.description-content').scrollHeight;
    const collapsedHeight = {{ section.settings.collapsed_height }};
    
    if (contentHeight <= collapsedHeight) {
      toggleButton.style.display = 'none';
      descriptionContainer.classList.remove('collapsed');
      const fadeOverlay = descriptionContainer.querySelector('.fade-overlay');
      if (fadeOverlay) fadeOverlay.style.display = 'none';
    }
    
    toggleButton.addEventListener('click', function() {
      const isExpanded = descriptionContainer.classList.contains('expanded');
      
      if (!isExpanded) {
        descriptionContainer.classList.remove('collapsed');
        descriptionContainer.classList.add('expanded');
        toggleButton.querySelector('.button-text').textContent = '{{ section.settings.collapse_text }}';
      } else {
        descriptionContainer.classList.remove('expanded');
        descriptionContainer.classList.add('collapsed');
        toggleButton.querySelector('.button-text').textContent = '{{ section.settings.expand_text }}';
      }
    });
  }

  // Mark section as loaded
  const section = document.querySelector('.rich-text-' + sectionId);
  if (section) {
    section.setAttribute('data-section-loaded', 'true');
  }
});

// Handle Shopify section reloads
document.addEventListener('shopify:section:load', function(event) {
  if (event.target.querySelector('[data-section-type="rich-text"]')) {
    // Re-initialize after section reload
    const sectionId = event.target.querySelector('[data-section-id]').getAttribute('data-section-id');
    const toggleButton = event.target.querySelector('.toggle-description');
    const descriptionContainer = event.target.querySelector('.description-container');
    
    if (toggleButton && descriptionContainer) {
      const contentHeight = descriptionContainer.querySelector('.description-content').scrollHeight;
      const collapsedHeight = parseInt(descriptionContainer.style.maxHeight);
      
      if (contentHeight <= collapsedHeight) {
        toggleButton.style.display = 'none';
        descriptionContainer.classList.remove('collapsed');
      }
    }
  }
});
</script>

{% schema %}
{
  "name": "Rich text",
  "tag": "section",
  "class": "dynamic-section",
  "settings": [
    {
      "type": "text",
      "id": "title",
      "label": "Heading",
      "default": "O nas"
    },
    {
      "type": "richtext",
      "id": "rich_text",
      "label": "Text",
      "default": "<p>Użyj tego tekstu, aby podzielić się informacjami o swojej marce z klientami. Opisz produkt, podziel się ogłoszeniami lub powitaj klientów w swoim sklepie.</p>"
    },
    {
      "type": "range",
      "id": "heading_size",
      "min": 20,
      "max": 48,
      "step": 2,
      "unit": "px",
      "label": "Heading size",
      "default": 32
    },
    {
      "type": "range",
      "id": "text_size",
      "min": 14,
      "max": 24,
      "step": 1,
      "unit": "px",
      "label": "Text size",
      "default": 16
    },
    {
      "type": "page",
      "id": "page",
      "label": "Or show content from a page",
      "info": "Contact forms will not be displayed."
    },
    {
      "type": "select",
      "id": "alignment",
      "label": "Alignment",
      "options": [
        {
          "value": "a-left",
          "label": "Left"
        },
        {
          "value": "a-center",
          "label": "Center"
        }
      ],
      "default": "a-center"
    },
    {
      "type": "range",
      "id": "content_width",
      "min": 30,
      "max": 100,
      "step": 5,
      "unit": "%",
      "label": "Content width",
      "default": 70
    },
    {
      "type": "header",
      "content": "Expand/Collapse Feature"
    },
    {
      "type": "checkbox",
      "id": "enable_expand",
      "label": "Enable expand/collapse",
      "default": false
    },
    {
      "type": "range",
      "id": "collapsed_height",
      "min": 100,
      "max": 500,
      "step": 20,
      "unit": "px",
      "label": "Collapsed height",
      "default": 200
    },
    {
      "type": "text",
      "id": "expand_text",
      "label": "Expand button text",
      "default": "CZYTAJ WIĘCEJ"
    },
    {
      "type": "text",
      "id": "collapse_text",
      "label": "Collapse button text",
      "default": "ZWIŃ"
    },
    {
      "type": "checkbox",
      "id": "reduce_padding",
      "label": "Reduce section padding",
      "default": false
    },
    {
      "type": "select",
      "id": "section_padding",
      "label": "Section spacing",
      "options": [
        {
          "value": "top",
          "label": "Top"
        },
        {
          "value": "bottom",
          "label": "Bottom"
        },
        {
          "value": "both",
          "label": "Both"
        },
        {
          "value": "none",
          "label": "None"
        }
      ],
      "default": "both"
    },
    {
      "type": "header",
      "content": "Colors"
    },
    {
      "type": "select",
      "id": "color_scheme",
      "label": "Color scheme",
      "default": "none",
      "options": [
        {
          "value": "none",
          "label": "Default"
        },
        {
          "value": "1",
          "label": "Scheme 1"
        },
        {
          "value": "2",
          "label": "Scheme 2"
        },
        {
          "value": "3",
          "label": "Scheme 3"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Rich text",
      "settings": {
        "title": "Nasza historia",
        "heading_size": 32,
        "text_size": 16,
        "content_width": 70
      }
    }
  ],
  "disabled_on": {
    "groups": ["header", "footer"]
  }
}
{% endschema %}
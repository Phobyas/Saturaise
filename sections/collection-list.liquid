{%- style -%}
  .swiper-collection-carousel {
    overflow: hidden;
    position: relative;
    max-width: 1280px;
    margin: 0 auto;
    width: 100%;
  }
  
  @media (min-width: 1920px) {
    .swiper-collection-carousel {
      max-width: 1600px;
    }
  }
  
  .swiper-wrapper {
    display: flex;
    width: 100%;
  }
  
  .swiper-slide {
    flex-shrink: 0;
    width: 100%;
    height: 100%;
    position: relative;
  }
  
  /* Fix for Swiper navigation buttons */
  .swiper-button-prev,
  .swiper-button-next {
    width: 40px;
    height: 40px;
    background-color: white;
    border-radius: 50%;
    box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    z-index: 10;
    cursor: pointer;
    align-items: center;
    justify-content: center;
  }
  
  .swiper-button-prev {
    left: -80px;
  }
  
  .swiper-button-next {
    right: -80px;
  }

  /* Hide the default Swiper arrow content */
  .swiper-button-prev:after,
  .swiper-button-next:after {
    display: none;
  }
  
  /* Custom arrow styles using SVG */
  .swiper-button-prev svg,
  .swiper-button-next svg {
    width: 20px;
    height: 20px;
    fill: #000;
  }
  
  /* Hide navigation buttons on mobile */
  @media (max-width: 767px) {
    .swiper-button-prev,
    .swiper-button-next {
      display: none !important;
    }
  }
{%- endstyle -%}

<div class="section-collection-carousel max-w-[1280px] mx-auto mb-5 px-3 md:px-0" data-section-id="{{ section.id }}" data-section-type="collection-carousel">
  {% if section.settings.title != blank %}
    <h2 class="text-[24px] md:text-[32px] font-bold mb-6 ">{{ section.settings.title }}</h2>
  {% endif %}

  <div class="swiper-container swiper-collection-carousel">
    <div class="swiper-wrapper">
      {% for block in section.blocks %}
        {% assign collection = collections[block.settings.collection] %}
        {% if collection == blank %}{% continue %}{% endif %}
        
        <div class="swiper-slide" {{ block.shopify_attributes }}>
          <a href="{{ collection.url }}" class="group block relative">
            <div class="relative overflow-hidden">
              {% if collection.image %}
                {% assign image_url = collection.image | img_url: '760x1000', crop: 'center' %}
              {% elsif collection.products.first.featured_image %}
                {% assign image_url = collection.products.first.featured_image | img_url: '760x1000', crop: 'center' %}
              {% else %}
                {% assign image_url = "collection-placeholder.jpg" | asset_url %}
              {% endif %}
              
              <img
                src="{{ image_url }}"
                alt="{{ collection.title | escape }}"
                class="w-full h-auto object-cover object-center transition-transform duration-700 ease-out group-hover:scale-105"
                loading="lazy"
                width="760"
                height="1000"
              >
            </div>
            
            <div class="mt-4 text-center">
              <h3 class="absolute top-[85%] left-[50%] transform -translate-x-[50%] -translate-y-[50%] text-2xl font-bold tracking-wider uppercase text-white">{{ collection.title }}</h3>
            </div>
          </a>
        </div>
      {% endfor %}
    </div>

    <div class="swiper-button-prev">
      <svg class="flickity-button-icon" viewBox="0 0 100 100">
        <path d="M71.9,95L25.1,52.2c-0.6-0.6-0.9-1.3-0.9-2.2s0.3-1.6,0.9-2.2L71.9,5l3.9,4.3L31.4,50l44.4,40.7L71.9,95z" class="arrow"></path>
      </svg>
    </div>
    <div class="swiper-button-next">
      <svg class="flickity-button-icon" viewBox="0 0 100 100">
        <path d="M71.9,95L25.1,52.2c-0.6-0.6-0.9-1.3-0.9-2.2s0.3-1.6,0.9-2.2L71.9,5l3.9,4.3L31.4,50l44.4,40.7L71.9,95z" class="arrow" transform="translate(100, 100) rotate(180)"></path>
      </svg>
    </div>
  </div>
</div>

{% comment %}
  Make sure Swiper JS is loaded before initializing
{% endcomment %}
<script>
  // Check if Swiper is already loaded
  function isSwiperLoaded() {
    return typeof Swiper !== 'undefined';
  }

  // Initialize the Swiper carousel
  function initializeSwiper() {
    if (!isSwiperLoaded()) {
      console.error('Swiper is not loaded. Make sure to include the Swiper library.');
      loadSwiper();
      return;
    }

    var swiper = new Swiper(".swiper-collection-carousel", {
      slidesPerView: 1,
      spaceBetween: 20,
      loop: true,
      navigation: {
        nextEl: '.swiper-button-next',
        prevEl: '.swiper-button-prev',
      },
      breakpoints: {
        640: {
          slidesPerView: 2,
          spaceBetween: 20,
        },
        1024: {
          slidesPerView: 3,
          spaceBetween: 30,
        },
        1280: {
          slidesPerView: {{ section.settings.items_per_row }},
          spaceBetween: 30,
        },
      },
    });
    
    // Check for button visibility based on container width
    function updateButtonsVisibility() {
      const container = document.querySelector('.section-collection-carousel');
      if (!container) return;
      
      const prevButton = container.querySelector('.swiper-button-prev');
      const nextButton = container.querySelector('.swiper-button-next');
      
      if (prevButton && nextButton) {
        const containerRect = container.getBoundingClientRect();
        const containerWidth = containerRect.width;
        const viewportWidth = window.innerWidth;
        
        // Calculate available space for buttons
        const leftSpace = containerRect.left;
        const rightSpace = viewportWidth - (containerRect.left + containerWidth);
        
        // If not enough space on either side, hide both buttons
        if (leftSpace < 80 || rightSpace < 80 || containerWidth < 1280) {
          prevButton.style.display = 'none';
          nextButton.style.display = 'none';
        } else {
          prevButton.style.display = '';
          nextButton.style.display = '';
        }
      }
    }

    // Call initially and on resize
    updateButtonsVisibility();
    window.addEventListener('resize', updateButtonsVisibility);
  }

  // Load Swiper if it's not already loaded
  function loadSwiper() {
    if (!isSwiperLoaded()) {
      var swiperCss = document.createElement('link');
      swiperCss.rel = 'stylesheet';
      swiperCss.href = 'https://cdn.jsdelivr.net/npm/swiper@9/swiper-bundle.min.css';
      document.head.appendChild(swiperCss);

      var swiperScript = document.createElement('script');
      swiperScript.src = 'https://cdn.jsdelivr.net/npm/swiper@9/swiper-bundle.min.js';
      swiperScript.onload = function() {
        initializeSwiper();
      };
      document.head.appendChild(swiperScript);
    } else {
      initializeSwiper();
    }
  }

  // Initialize on page load
  if (document.readyState === 'complete') {
    loadSwiper();
  } else {
    document.addEventListener('DOMContentLoaded', loadSwiper);
  }

  // Re-initialize when section is reloaded by Shopify editor
  document.addEventListener('shopify:section:load', function(event) {
    if (event.target.contains(document.querySelector('.swiper-collection-carousel'))) {
      loadSwiper();
    }
  });
</script>

{% schema %}
{
  "name": "Collection Carousel",
  "tag": "section",
  "settings": [
    {
      "type": "text",
      "id": "title",
      "label": "Heading",
      "default": "Shop by Category"
    },
    {
      "type": "range",
      "id": "items_per_row",
      "min": 3,
      "max": 5,
      "step": 1,
      "label": "Collections per row (desktop)",
      "default": 4
    }
  ],
  "blocks": [
    {
      "type": "collection",
      "name": "Collection",
      "settings": [
        {
          "type": "collection",
          "id": "collection",
          "label": "Collection"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Category Carousel",
      "blocks": [
        {
          "type": "collection"
        },
        {
          "type": "collection"
        },
        {
          "type": "collection"
        },
        {
          "type": "collection"
        }
      ]
    }
  ]
}
{% endschema %}
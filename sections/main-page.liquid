{% comment %}
  section/contact-form-custom.liquid
{% endcomment %}

<div class="custom-contact-page" id="contact-{{ section.id }}">
  <div class="contact-header">
    {% if section.settings.title != blank %}
      <h1>{{ section.settings.title }}</h1>
    {% endif %}
    
    {% if section.settings.subtitle != blank %}
      <p class="contact-subtitle">{{ section.settings.subtitle }}</p>
    {% endif %}
  </div>
  
  <div class="contact-container">
    <div class="contact-info">
      {% if section.settings.show_contact_info %}
        <div class="info-card">
          <div class="info-icon">
            <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
              <path d="M20 4H4C2.9 4 2.01 4.9 2.01 6L2 18C2 19.1 2.9 20 4 20H20C21.1 20 22 19.1 22 18V6C22 4.9 21.1 4 20 4ZM20 8L12 13L4 8V6L12 11L20 6V8Z" fill="currentColor"/>
            </svg>
          </div>
          <h3>{{ section.settings.contact_title }}</h3>
          <p>{{ section.settings.email }}</p>
          <p>{{ section.settings.phone }}</p>
        </div>
      {% endif %}
      
      {% if section.settings.show_address %}
        <div class="info-card">
          <div class="info-icon">
            <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
              <path d="M12 2C8.13 2 5 5.13 5 9C5 14.25 12 22 12 22C12 22 19 14.25 19 9C19 5.13 15.87 2 12 2ZM12 11.5C10.62 11.5 9.5 10.38 9.5 9C9.5 7.62 10.62 6.5 12 6.5C13.38 6.5 14.5 7.62 14.5 9C14.5 10.38 13.38 11.5 12 11.5Z" fill="currentColor"/>
            </svg>
          </div>
          <h3>{{ section.settings.address_title }}</h3>
          <p>{{ section.settings.address_line1 }}</p>
          <p>{{ section.settings.address_line2 }}</p>
        </div>
      {% endif %}
      
      {% if section.settings.show_hours %}
        <div class="info-card">
          <div class="info-icon">
            <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
              <path d="M11.99 2C6.47 2 2 6.48 2 12C2 17.52 6.47 22 11.99 22C17.52 22 22 17.52 22 12C22 6.48 17.52 2 11.99 2ZM12 20C7.58 20 4 16.42 4 12C4 7.58 7.58 4 12 4C16.42 4 20 7.58 20 12C20 16.42 16.42 20 12 20ZM12.5 7H11V13L16.25 16.15L17 14.92L12.5 12.25V7Z" fill="currentColor"/>
            </svg>
          </div>
          <h3>{{ section.settings.hours_title }}</h3>
          <p>{{ section.settings.hours_weekdays }}</p>
          <p>{{ section.settings.hours_weekend }}</p>
        </div>
      {% endif %}
    </div>
    
    <div class="contact-form-container">
      {% if section.settings.form_title != blank %}
        <h2>{{ section.settings.form_title }}</h2>
      {% endif %}
      
      {%- form 'contact', id: 'ContactForm' -%}
        {%- if form.posted_successfully? -%}
          <div class="form-status form-status-list form-status--success">
            <span class="success-icon">✓</span>
            <h3>Wiadomość wysłana</h3>
            <p>Dziękujemy za kontakt. Odpowiemy najszybciej jak to możliwe.</p>
          </div>
        {%- elsif form.errors -%}
          <div class="form-status form-status-list form-status--error">
            <h3>{{ 'general.forms.post_error' | t }}</h3>
            <ul>
              {%- for field in form.errors -%}
                <li>
                  <a href="#ContactForm-{{ field }}">
                    {%- if form.errors.translated_fields[field] contains 'author' -%}
                      {{ 'sections.contact_form.name' | t }}
                    {%- elsif form.errors.translated_fields[field] contains 'body'-%}
                      {{ 'sections.contact_form.message' | t }}
                    {%- else -%}
                      {{ form.errors.translated_fields[field] }}
                    {%- endif -%}
                    {{ form.errors.messages[field] }}
                  </a>
                </li>
              {%- endfor -%}
            </ul>
          </div>
        {%- endif -%}
        
        <div class="form-row">
          <div class="form-group">
            <label for="ContactForm-name">{{ 'sections.contact_form.name' | t }}</label>
            <input 
              type="text" 
              id="ContactForm-name" 
              name="contact[name]" 
              value="{% if form.name %}{{ form.name }}{% endif %}">
          </div>
          
          <div class="form-group">
            <label for="ContactForm-email">{{ 'sections.contact_form.email' | t }} <span aria-hidden="true">*</span></label>
            <input 
              type="email" 
              id="ContactForm-email" 
              name="contact[email]" 
              value="{% if form.email %}{{ form.email }}{% endif %}" 
              spellcheck="false" 
              autocomplete="email" 
              autocapitalize="off" 
              required>
          </div>
        </div>
        
        <div class="form-group">
          <label for="ContactForm-phone">{{ 'sections.contact_form.phone' | t }}</label>
          <input 
            type="tel" 
            id="ContactForm-phone" 
            name="contact[phone]" 
            value="{% if form.phone %}{{ form.phone }}{% endif %}">
        </div>
        
        <div class="form-group">
          <label for="ContactForm-subject">{{ section.settings.subject_label }}</label>
          <input 
            type="text" 
            id="ContactForm-subject"
            name="contact[subject]"
            value="{% if form.subject %}{{ form.subject }}{% endif %}">
        </div>
        
        <div class="form-group">
          <label for="ContactForm-body">{{ 'sections.contact_form.message' | t }} <span aria-hidden="true">*</span></label>
          <textarea 
            id="ContactForm-body" 
            name="contact[body]" 
            rows="5" 
            style="min-height: 180px !important; height: 180px !important;"
            required>{% if form.body %}{{ form.body }}{% endif %}</textarea>
        </div>
        
        <button type="submit" class="contact-submit-button">
          {{ 'sections.contact_form.send' | t }}
        </button>
      {%- endform -%}
    </div>
  </div>
</div>

<style>
  /* Success message styling - refined and subtle */
  .form-status--success {
    background-color: #f1f9f1;
    color: #2e7d32;
    padding: 16px 20px;
    text-align: center;
    border-radius: 8px;
    margin-bottom: 20px;
    box-shadow: 0 1px 3px rgba(0,0,0,0.08);
    animation: fadeInSuccess 0.5s ease forwards;
    border: 1px solid #c8e6c9;
    font-size: 15px;
  }
  
  @keyframes fadeInSuccess {
    from {
      opacity: 0;
      transform: translateY(-10px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
  
  .form-status--success .success-icon {
    display: inline-block;
    width: 24px;
    height: 24px;
    margin-right: 8px;
    background: #2e7d32;
    color: white;
    border-radius: 50%;
    font-size: 14px;
    font-weight: bold;
    line-height: 24px;
    vertical-align: middle;
    text-align: center;
  }
  
  .form-status--success h3 {
    display: inline-block;
    font-size: 16px;
    margin: 0;
    font-weight: 600;
    vertical-align: middle;
  }
  
  .form-status--success p {
    font-size: 15px;
    margin: 4px 0 0;
    opacity: 0.9;
  }

  #contact-{{ section.id }} {
    --primary-color: {{ section.settings.primary_color }};
    --text-color: {{ section.settings.text_color }};
    --bg-color: {{ section.settings.bg_color }};
    --card-bg-color: {{ section.settings.card_bg_color }};
    --heading-color: {{ section.settings.heading_color }};
    
    max-width: 1200px;
    margin: 0 auto;
    padding: 20px 20px 40px;
    color: var(--text-color);
    min-height: calc(80vh - 80px); /* Adjust for header and footer space */
    display: flex;
    flex-direction: column;
  }
  
  .contact-header {
    text-align: center;
    margin-bottom: 40px;
  }
  
  .contact-header h1 {
    font-size: 28px;
    font-weight: 700;
    margin-bottom: 12px;
    color: var(--heading-color);
  }
  
  .contact-subtitle {
    font-size: 16px;
    color: var(--text-color);
    max-width: 600px;
    margin: 0 auto;
  }
  
  .contact-container {
    display: flex;
    flex-direction: column;
    gap: 30px;
    flex: 1;
    position: relative;
  }
  
  .contact-info {
    display: grid;
    grid-template-columns: repeat(1, 1fr);
    gap: 20px;
  }
  
  .info-card {
    padding: 20px 16px;
    background-color: var(--card-bg-color);
    border-radius: 12px;
    text-align: center;
    transition: all 0.3s ease;
  }
  
  .info-card:hover {
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.08);
    transform: translateY(-5px);
  }
  
  .info-icon {
    margin: 0 auto 16px;
    width: 56px;
    height: 56px;
    border-radius: 50%;
    background-color: var(--primary-color);
    color: white;
    display: flex;
    align-items: center;
    justify-content: center;
  }
  
  .info-card h3 {
    font-size: 18px;
    font-weight: 600;
    margin-bottom: 10px;
    color: var(--heading-color);
  }
  
  .info-card p {
    font-size: 15px;
    color: var(--text-color);
    margin: 4px 0;
  }
  
  .contact-form-container {
    background-color: var(--bg-color);
    padding: 25px 20px;
    border-radius: 16px;
    box-shadow: 0 8px 30px rgba(0, 0, 0, 0.06);
  }
  
  .contact-form-container h2 {
    font-size: 22px;
    font-weight: 600;
    margin-bottom: 20px;
    text-align: center;
    color: var(--heading-color);
  }
  
  .form-status {
    margin-bottom: 20px;
    padding: 15px;
    border-radius: 8px;
  }
  
  .form-status--error {
    background-color: #fdeded;
    color: #d32f2f;
  }
  
  .form-row {
    display: flex;
    flex-direction: column;
    gap: 15px;
    margin-bottom: 15px;
  }
  
  .form-group {
    margin-bottom: 15px;
  }
  
  .form-group label {
    display: block;
    font-size: 15px;
    font-weight: 500;
    margin-bottom: 6px;
    color: var(--text-color);
  }
  
  .form-group input,
  .form-group textarea {
    width: 100%;
    padding: 12px 14px;
    font-size: 16px;
    border: 1px solid #e0e0e0;
    border-radius: 8px;
    background-color: #f9f9f9;
    transition: all 0.3s;
  }
  
  .form-group input:focus,
  .form-group textarea:focus {
    outline: none;
    border-color: var(--primary-color);
    background-color: white;
    box-shadow: 0 0 0 3px rgba(var(--primary-color-rgb, 50, 50, 50), 0.1);
  }
  
  .form-group input::placeholder,
  .form-group textarea::placeholder {
    color: #aaa;
  }
  
  .contact-submit-button {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    min-height: 50px;
    padding: 14px 30px;
    width: 100%;
    border: 1px solid var(--primary-color);
    border-radius: 8px;
    background: var(--primary-color);
    color: white;
    font-size: 16px;
    font-weight: 600;
    letter-spacing: 0.5px;
    text-transform: uppercase;
    cursor: pointer;
    transition: all 0.3s ease;
    margin-top: 10px;
  }
  
  .contact-submit-button:hover {
    background: #222 !important;
    transform: translateY(-2px);
  }
  
  /* FIX for textarea shrinking issue */
  .form-group textarea {
    width: 100%;
    padding: 12px 14px;
    font-size: 16px;
    border: 1px solid #e0e0e0;
    border-radius: 8px;
    background-color: #f9f9f9;
    transition: all 0.3s;
    min-height: 180px !important; /* Increased from 120px to 180px */
    height: 180px !important; /* Increased from 120px to 180px */
    resize: vertical; /* Allow only vertical resizing */
    flex: none !important; /* Prevent flex shrinking */
  }

  /* Advanced selectors to ensure textarea maintains height */
  #ContactForm-body,
  #ContactForm-body:focus,
  #ContactForm-body:active,
  textarea[name="contact[body]"],
  textarea[name="contact[body]"]:focus,
  textarea[name="contact[body]"]:active {
    min-height: 180px !important;
    height: 180px !important;
  }

  /* Override the flex behavior of the form group containing the textarea */
  .form-group:last-of-type {
    display: block !important; /* Override flex */
    flex: none !important; /* Override flex grow/shrink */
    height: auto !important; /* Let it be as tall as needed */
  }
  
  /* Tablet styles */
  @media (min-width: 768px) {
    #contact-{{ section.id }} {
      padding: 30px 30px 60px;
    }
    
    .contact-header {
      margin-bottom: 50px;
    }
    
    .contact-header h1 {
      font-size: 32px;
      margin-bottom: 14px;
    }
    
    .contact-subtitle {
      font-size: 17px;
    }
    
    .contact-container {
      gap: 40px;
    }
    
    .contact-info {
      grid-template-columns: repeat(3, 1fr);
      gap: 20px;
    }
    
    .info-card {
      padding: 24px 20px;
    }
    
    .info-icon {
      width: 60px;
      height: 60px;
    }
    
    .contact-form-container {
      padding: 30px 25px;
    }
    
    .form-row {
      flex-direction: row;
      gap: 20px;
    }
    
    .form-row .form-group {
      flex: 1;
    }
  }
  
  /* Desktop styles */
  @media (min-width: 1024px) {
    #contact-{{ section.id }} {
      padding: 40px 20px 80px;
    }
    
    .contact-header {
      margin-bottom: 40px;
    }
    
    .contact-header h1 {
      font-size: 36px;
      margin-bottom: 16px;
    }
    
    .contact-subtitle {
      font-size: 18px;
    }
    
    .contact-container {
      flex-direction: row;
      align-items: stretch;
      min-height: calc(80vh - 250px); /* Account for header and padding */
      gap: 60px;
    }
    
    .contact-info {
      width: 35%;
      grid-template-columns: 1fr;
      display: flex;
      flex-direction: column;
      gap: 24px;
    }
    
    .contact-form-container {
      width: 65%;
      display: flex;
      flex-direction: column;
      padding: 40px;
    }
    
    .info-card {
      flex: 1;
      display: flex;
      flex-direction: column;
      justify-content: center;
      padding: 28px 24px;
    }
    
    .info-icon {
      width: 64px;
      height: 64px;
    }
    
    .info-card h3 {
      font-size: 20px;
      margin-bottom: 12px;
    }
    
    .info-card p {
      font-size: 16px;
    }
    
    /* Form content */
    #contact-{{ section.id }} form {
      flex-grow: 1;
      display: flex;
      flex-direction: column;
    }
    
    #contact-{{ section.id }} .form-group:last-of-type {
      flex: none !important;
      display: block !important;
    }
    
    #contact-{{ section.id }} textarea {
      flex: none !important;
      min-height: 180px !important; /* Increased from 120px to 180px */
      height: 180px !important; /* Increased from 120px to 180px */
    }
    
    /* Make the message form group take specific height instead of flexible growth */
    #contact-{{ section.id }} .form-group:last-of-type {
      height: auto !important;
      margin-bottom: 20px;
    }
  }
  
  /* Fix for mobile viewport height issues */
  @media (max-height: 700px) and (max-width: 767px) {
    #contact-{{ section.id }} {
      min-height: auto;
    }
    
    .contact-container {
      min-height: auto;
    }
  }

  /* Fix for validation messages duplicating */
  .validation-message {
    color: #d32f2f;
    font-size: 14px;
    margin-top: 4px;
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Get the form and email input
    const contactForm = document.getElementById('ContactForm');
    const emailInput = document.getElementById('ContactForm-email');
    
    if (contactForm && emailInput) {
      // Disable HTML5 validation - we'll handle it ourselves
      contactForm.setAttribute('novalidate', 'novalidate');
      
      // Handle form submission
      contactForm.addEventListener('submit', function(event) {
        // Prevent default form submission
        event.preventDefault();
        
        // Clear any existing error messages first
        const allErrorMessages = document.querySelectorAll('.validation-message');
        allErrorMessages.forEach(msg => msg.parentNode.removeChild(msg));
        
        // Form validation
        let isValid = true;
        
        // Check email validity
        if (emailInput.value.trim() === '') {
          // Email is empty
          isValid = false;
          showErrorMessage(emailInput, 'Wypełnij to pole.');
        } else if (!isValidEmail(emailInput.value.trim())) {
          // Email format is invalid
          isValid = false;
          showErrorMessage(emailInput, 'Uwzględnij znak „@" w adresie e-mail. W adresie „' + emailInput.value + '" brakuje znaku „@".');
        }
        
        // Check message field (required)
        const messageInput = document.getElementById('ContactForm-body');
        if (messageInput && messageInput.value.trim() === '') {
          isValid = false;
          showErrorMessage(messageInput, 'Wypełnij to pole.');
        }
        
        if (isValid) {
          // Get form data
          const formData = new FormData(contactForm);
          
          // Add required Shopify params
          formData.append('form_type', 'contact');
          formData.append('utf8', '✓');
          
          // Submit the form via AJAX
          fetch('/contact', {
            method: 'POST',
            body: formData,
            headers: {
              'Accept': 'text/html, application/xhtml+xml, application/xml'
            }
          })
          .then(response => {
            if (!response.ok) {
              throw new Error('Network response was not ok');
            }
            return response.text();
          })
          .then(html => {
            // Check if the response contains error messages
            const parser = new DOMParser();
            const doc = parser.parseFromString(html, 'text/html');
            const errors = doc.querySelector('.form-status--error');
            
            if (errors) {
              // Show the errors on the page
              const formContainer = contactForm.closest('.contact-form-container');
              if (formContainer) {
                // Remove any existing error or success messages
                const existingMessages = formContainer.querySelectorAll('.form-status');
                existingMessages.forEach(msg => msg.remove());
                
                // Insert the error message at the top of the form
                formContainer.insertBefore(errors, formContainer.firstChild);
              }
            } else {
              // Success! Show success message
              // Create a hidden "success message" container if it doesn't exist yet
              let successContainer = document.querySelector('.form-status--success');
              if (!successContainer) {
                successContainer = document.createElement('div');
                successContainer.className = 'form-status form-status-list form-status--success';
                successContainer.innerHTML = `
                  <span class="success-icon">✓</span>
                  <h3>Wiadomość wysłana</h3>
                  <p>Dziękujemy za kontakt. Odpowiemy najszybciej jak to możliwe.</p>
                `;
                
                // Insert at the beginning of the form
                const formContainer = contactForm.closest('.contact-form-container');
                if (formContainer && formContainer.querySelector('h2')) {
                  formContainer.insertBefore(successContainer, formContainer.querySelector('h2').nextSibling);
                } else {
                  contactForm.insertBefore(successContainer, contactForm.firstChild);
                }
              } else {
                // Make sure it's visible if it exists
                successContainer.style.display = 'block';
              }
              
              // Reset the form on success
              contactForm.reset();
              
              // Scroll to success message
              successContainer.scrollIntoView({ behavior: 'smooth', block: 'start' });
            }
          })
          .catch(error => {
            console.error('Error submitting form:', error);
          });
        }
      });
      
      // Clear error message when user types in email field
      emailInput.addEventListener('input', function() {
        const errorMessage = this.parentNode.querySelector('.validation-message');
        if (errorMessage) {
          errorMessage.parentNode.removeChild(errorMessage);
        }
      });
      
      // Also clear on focus
      emailInput.addEventListener('focus', function() {
        const errorMessage = this.parentNode.querySelector('.validation-message');
        if (errorMessage) {
          errorMessage.parentNode.removeChild(errorMessage);
        }
      });
      
      // Helper function to show error message
      function showErrorMessage(inputElement, message) {
        // Create error message element
        const errorMessage = document.createElement('div');
        errorMessage.className = 'validation-message';
        errorMessage.style.color = '#d32f2f';
        errorMessage.style.fontSize = '14px';
        errorMessage.style.marginTop = '4px';
        errorMessage.textContent = message;
        
        // Insert after the input element
        inputElement.parentNode.appendChild(errorMessage);
        
        // Focus on the input
        inputElement.focus();
      }
      
      // Helper function to validate email format
      function isValidEmail(email) {
        const re = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
        return re.test(email);
      }
    }
    
    // Fix for textarea height
    const fixTextareaHeight = function() {
      const textarea = document.getElementById('ContactForm-body');
      if (!textarea) return;
      
      // Set fixed height
      textarea.style.minHeight = '180px';
      textarea.style.height = '180px';
      
      // Event listeners to maintain height
      textarea.addEventListener('focus', function() {
        this.style.minHeight = '180px';
        this.style.height = '180px';
      });
      
      textarea.addEventListener('blur', function() {
        this.style.minHeight = '180px';
        this.style.height = '180px';
      });
      
      textarea.addEventListener('input', function() {
        this.style.minHeight = '180px';
        this.style.height = '180px';
      });
    };
    
    // Run textarea fix
    fixTextareaHeight();
    
    // Function to ensure equal heights
    function equalizeHeights() {
      if (window.innerWidth >= 1024) {
        const contactInfo = document.querySelector('#contact-{{ section.id }} .contact-info');
        const contactForm = document.querySelector('#contact-{{ section.id }} .contact-form-container');
        
        if (contactInfo && contactForm) {
          // Reset heights first
          contactInfo.style.height = 'auto';
          contactForm.style.height = 'auto';
          
          // Get heights
          const infoHeight = contactInfo.offsetHeight;
          const formHeight = contactForm.offsetHeight;
          
          // Set both to the larger height
          const maxHeight = Math.max(infoHeight, formHeight);
          contactInfo.style.height = maxHeight + 'px';
          contactForm.style.height = maxHeight + 'px';
        }
      } else {
        // Reset heights on mobile/tablet
        const contactInfo = document.querySelector('#contact-{{ section.id }} .contact-info');
        const contactForm = document.querySelector('#contact-{{ section.id }} .contact-form-container');
        
        if (contactInfo && contactForm) {
          contactInfo.style.height = 'auto';
          contactForm.style.height = 'auto';
        }
      }
    }
    
    // Run on load
    equalizeHeights();
    
    // Run on window resize
    window.addEventListener('resize', equalizeHeights);
    
    // Run when orientation changes (important for mobile)
    window.addEventListener('orientationchange', equalizeHeights);
    
    // Fix for iOS Safari 100vh issue
    function setVhProperty() {
      let vh = window.innerHeight * 0.01;
      document.documentElement.style.setProperty('--vh', `${vh}px`);
    }
    
    setVhProperty();
    window.addEventListener('resize', setVhProperty);
    
    // Check if success message exists and scroll to it
    const successMessage = document.querySelector('.form-status--success');
    if (successMessage) {
      // Scroll to success message after a small delay to ensure everything is loaded
      setTimeout(function() {
        successMessage.scrollIntoView({ behavior: 'smooth', block: 'start' });
      }, 300);
    }
  });
</script>

{% schema %}
{
  "name": "Contact Form Custom",
  "tag": "section",
  "class": "section",
  "settings": [
    {
      "type": "header",
      "content": "Header Settings"
    },
    {
      "type": "text",
      "id": "title",
      "label": "Title",
      "default": "Kontakt"
    },
    {
      "type": "text",
      "id": "subtitle",
      "label": "Subtitle",
      "default": "Masz pytania? Skontaktuj się z nami!"
    },
    {
      "type": "header",
      "content": "Contact Information"
    },
    {
      "type": "checkbox",
      "id": "show_contact_info",
      "label": "Show Contact Info Card",
      "default": true
    },
    {
      "type": "text",
      "id": "contact_title",
      "label": "Contact Info Title",
      "default": "Obsługa klienta"
    },
    {
      "type": "text",
      "id": "email",
      "label": "Email",
      "default": "kontakt@twojsklep.pl"
    },
    {
      "type": "text",
      "id": "phone",
      "label": "Phone",
      "default": "+48 123 456 789"
    },
    {
      "type": "header",
      "content": "Address Information"
    },
    {
      "type": "checkbox",
      "id": "show_address",
      "label": "Show Address Card",
      "default": true
    },
    {
      "type": "text",
      "id": "address_title",
      "label": "Address Title",
      "default": "Adres"
    },
    {
      "type": "text",
      "id": "address_line1",
      "label": "Address Line 1",
      "default": "ul. Przykładowa 123"
    },
    {
      "type": "text",
      "id": "address_line2",
      "label": "Address Line 2",
      "default": "00-000 Warszawa"
    },
    {
      "type": "header",
      "content": "Business Hours"
    },
    {
      "type": "checkbox",
      "id": "show_hours",
      "label": "Show Hours Card",
      "default": true
    },
    {
      "type": "text",
      "id": "hours_title",
      "label": "Hours Title",
      "default": "Godziny pracy"
    },
    {
      "type": "text",
      "id": "hours_weekdays",
      "label": "Weekday Hours",
      "default": "Poniedziałek - Piątek: 9:00 - 17:00"
    },
    {
      "type": "text",
      "id": "hours_weekend",
      "label": "Weekend Hours",
      "default": "Sobota - Niedziela: Zamknięte"
    },
    {
      "type": "header",
      "content": "Form Settings"
    },
    {
      "type": "text",
      "id": "form_title",
      "label": "Form Title",
      "default": "Napisz do nas"
    },
    {
      "type": "text",
      "id": "subject_label",
      "label": "Subject Field Label",
      "default": "Temat"
    },
    {
      "type": "header",
      "content": "Colors"
    },
    {
      "type": "color",
      "id": "primary_color",
      "label": "Primary Color",
      "default": "#323232"
    },
    {
      "type": "color",
      "id": "heading_color",
      "label": "Heading Color",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "text_color",
      "label": "Text Color",
      "default": "#333333"
    },
    {
      "type": "color",
      "id": "bg_color",
      "label": "Form Background Color",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "card_bg_color",
      "label": "Card Background Color",
      "default": "#f8f8f8"
    }
  ],
  "presets": [
    {
      "name": "Contact Form Custom",
      "category": "Custom Contact"
    }
  ]
}
{% endschema %}
{%- liquid
  assign option_name = option.name | downcase
  assign color_swatch_options = settings.swatch_option_names | replace: ' ,', ',' | replace: ', ', ',' | split: ',' | downcase
  assign current_option = "option" | append: option.position
  assign other_options = "option1 option2 option3" | remove: current_option | strip | split: " "
-%}

<div class="swatches__container mb2 js-variant-selector text-left" data-option-index="{{ option.position }}" data-other-options='{{ other_options | json }}'>
  <p class="swatches__option-name">
    {{ option.name }} &nbsp;| 
    {% for value in option.values %}
      {% if option.selected_value == value %}
        <span id="selected-option-{{ option.position }}" class="swatches__option-value">{{ value }}</span>
      {% endif %}
    {% endfor %}
  </p>

  <div class="swatches__grid-wrapper">
    {% for value in option.values %}
      {%- liquid
        assign css_color = value | split: ' ' | last | handle
        assign available = false
        assign swatch_image_url = nil
        assign variant_price = 0
        assign variant_found = false
        
        if value.swatch.image
          assign swatch_image_url = value.swatch.image | image_url: width: 100
        endif
        
        if value.swatch.color and color_swatch_style == 'swatch'
          assign css_color = value.swatch.color
        endif

        # Check availability and get price
        for variant in product.variants
          if variant[current_option] == value 
            if product.options.size == 1
              # Single option product
              assign variant_price = variant.price
              assign variant_found = true
              if variant.available
                assign available = true
              endif
            elsif product.options.size == 2
              # Two options product
              if variant[other_options[0]] == current_variant[other_options[0]]
                assign variant_price = variant.price
                assign variant_found = true
                if variant.available
                  assign available = true
                endif
              endif
            elsif product.options.size == 3
              # Three options product
              if variant[other_options[0]] == current_variant[other_options[0]] and variant[other_options[1]] == current_variant[other_options[1]]
                assign variant_price = variant.price
                assign variant_found = true
                if variant.available
                  assign available = true
                endif
              endif
            endif
          endif
        endfor

        # Get variant image
        assign variant_image_url = ''
        for variant in product.variants
          if variant[current_option] == value and variant[other_options[0]] == current_variant[other_options[0]] and variant[other_options[1]] == current_variant[other_options[1]]
            if variant.image
              assign variant_image_url = variant.image | img_url: '100x'
            endif
            break
          endif
        endfor

        assign checked = ''
        if current_variant[current_option] == value
          assign checked = 'checked="checked"'
        endif

        assign swatch_img = null
        assign swatch_color_name = value | handle | append: '.png'
        if images[swatch_color_name] != blank
          assign swatch_img = swatch_color_name | file_url
        endif
      -%}

      {% if show_color_swatches and color_swatch_options contains option_name %}
        <div class="swatches__swatch--color swatch-element color swatches__shape--{{ color_swatch_shape }} {% unless available %}soldout{% endunless %} js-swatch-element">
          <input 
            type="radio" 
            id="{{ product.id }}-{{ unique_id }}-{{ option.name }}-{{ forloop.index0 }}"
            class="swatches__form--input"
            name="{{ option_name }}-{{ product.id }}-{{ unique_id }}"
            value="{{ value | escape }}"
            form="product-form-{{ unique_id }}"
            data-position="{{ option.position }}"
            {{ checked }}>

          <label 
            class="swatches__form--label"
            tabindex="0"
            for="{{ product.id }}-{{ unique_id }}-{{ option.name }}-{{ forloop.index0 }}"
            data-swatch-color="{{ value | handleize }}"
            style="background-color: {{ css_color }};{% unless color_swatch_style == 'default-color' %}background-image: url({% if color_swatch_style == 'custom-image' and swatch_img != null %}{{ swatch_img }}{% elsif color_swatch_style == 'variant-image' %}{{ variant_image_url }}{% elsif color_swatch_style == 'swatch' %}{{ swatch_image_url }}{% endif %}); background-size:50px;background-position: center center;{% endunless %}">
          </label>
        </div>
      {% else %}
        <div class="swatches__swatch--regular swatch-element {% unless available %}soldout{% endunless %} js-swatch-element">
          <input 
            type="radio" 
            id="{{ product.id }}-{{ unique_id }}-{{ option.name }}-{{ forloop.index0 }}"
            class="swatches__form--input"
            name="{{ option_name }}-{{ product.id }}-{{ unique_id }}"
            value="{{ value | escape }}"
            form="product-form-{{ unique_id }}"
            data-position="{{ option.position }}"
            {{ checked }}>

          <label 
            class="swatches__form--label swatches__form--label-with-price" 
            for="{{ product.id }}-{{ unique_id }}-{{ option.name }}-{{ forloop.index0 }}" 
            tabindex="0">
            <span class="swatch-size">{{ value }}</span>
            {% if variant_found and variant_price > 0 %}
              <span class="swatch-price">{{ variant_price | money }}</span>
            {% endif %}
          </label>
        </div>
      {% endif %}
    {% endfor %}
  </div>
</div>

{% style %}
.swatches__grid-wrapper {
  display: flex;
  flex-wrap: wrap;
  gap: 8px;
  min-width: 30vw !important
}

.swatches__swatch--regular,
.swatches__swatch--color {
  flex: 1 1 auto;
  min-width: max(50px, calc((100% - 40px) / 6));
  max-width: calc((100% - 40px) / 6);
}

/* Add price display to existing labels */
.swatches__form--label-with-price {
  display: flex !important;
  flex-direction: column !important;
  align-items: center !important;
  justify-content: center !important;
  line-height: 1.2 !important;
  padding-top: 8px !important;
  padding-bottom: 8px !important;
}

.swatches__form--label-with-price .swatch-size {
  display: block !important;
  margin-bottom: 4px !important;
}

.swatches__form--label-with-price .swatch-price {
  display: block !important;
  font-size: 13px !important;
  font-weight: 400 !important;
  color: #666 !important;
  line-height: 1 !important;
}

/* Adjust for selected state */
.swatches__form--input:checked + .swatches__form--label-with-price .swatch-price {
  color: #323232 !important;
  font-weight: 500 !important;
}

/* Adjust for hover state */
.swatches__form--label-with-price:hover .swatch-price {
  color: #323232 !important;
}

/* Soldout state for price */
.soldout .swatches__form--label-with-price .swatch-price {
  text-decoration: line-through !important;
}

@media screen and (max-width: 768px) {
  .swatches__swatch--regular,
  .swatches__swatch--color {
    min-width: calc((100% - 24px) / 4);
    max-width: calc((100% - 24px) / 4);
  }
  
  .swatches__form--label-with-price .swatch-price {
    font-size: 12px !important;
  }
}

@media screen and (max-width: 480px) {
  .swatches__swatch--regular,
  .swatches__swatch--color {
    min-width: calc((100% - 16px) / 3);
    max-width: calc((100% - 16px) / 3);
  }
  
  .swatches__form--label-with-price .swatch-price {
    font-size: 11px !important;
  }
}
{% endstyle %}